<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Fri, 14 Jan 2022 00:44:43 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: myLogseqBlog</title>
		<dateCreated>Thu, 13 Jan 2022 15:27:04 GMT</dateCreated>
		<dateModified>Fri, 14 Jan 2022 00:44:43 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 12, 17, 23, 24, 31, 32, 36</expansionState>
		<vertScrollState>3</vertScrollState>
		<windowTop>185</windowTop>
		<windowLeft>678</windowLeft>
		<windowBottom>944</windowBottom>
		<windowRight>1695</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/mylogseqblog/" created="Sun, 29 Aug 2021 15:07:43 GMT">
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;mylogseqblog&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.1&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;mylogseqblog.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davegithub&quot;: &quot;*&quot;," isComment="true"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;" created="Fri, 19 Nov 2021 17:19:34 GMT"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="mylogseqblog.js" created="Sat, 11 Dec 2021 22:40:18 GMT">
				<outline text="const myVersion = &quot;0.4.1&quot;, myProductName = &quot;myLogseqBlog&quot;;" created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Wed, 12 Jan 2022 17:03:14 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;); "/>
				<outline text="const opml = require (&quot;opml&quot;); "/>
				<outline text="const davegithub = require (&quot;davegithub&quot;); " isComment="true"/>
				<outline text="" created="Wed, 12 Jan 2022 17:03:22 GMT"/>
				<outline text="var config = {" created="Wed, 12 Jan 2022 17:03:22 GMT">
					<outline text="twScreenName: undefined," created="Wed, 12 Jan 2022 18:31:44 GMT"/>
					<outline text="" created="Thu, 13 Jan 2022 15:35:08 GMT"/>
					<outline text="logSeqJournalFolder: undefined," created="Wed, 12 Jan 2022 17:03:53 GMT"/>
					<outline text="opmlJournalFile: undefined," created="Wed, 12 Jan 2022 17:04:05 GMT"/>
					<outline text="" created="Thu, 13 Jan 2022 15:34:56 GMT"/>
					<outline text="blogTitle: undefined," created="Wed, 12 Jan 2022 17:45:01 GMT"/>
					<outline text="blogDescription: undefined," created="Wed, 12 Jan 2022 17:46:14 GMT"/>
					<outline text="blogWhenCreated: undefined," created="Wed, 12 Jan 2022 17:45:01 GMT"/>
					<outline text="blogTimeZoneOffset: undefined," created="Wed, 12 Jan 2022 17:47:01 GMT"/>
					<outline text="blogCopyright: undefined," created="Wed, 12 Jan 2022 17:48:32 GMT"/>
					<outline text="blogUrlHeaderImage: undefined," created="Wed, 12 Jan 2022 17:48:32 GMT"/>
					<outline text="blogUrlTemplate: undefined," created="Wed, 12 Jan 2022 17:50:17 GMT"/>
					<outline text="blogUrlHomePageTemplate: undefined," created="Wed, 12 Jan 2022 17:50:38 GMT"/>
					<outline text="blogUrlGlossary: undefined," created="Wed, 12 Jan 2022 17:50:48 GMT"/>
					<outline text="blogUrlAboutOpml: undefined," created="Wed, 12 Jan 2022 17:50:57 GMT"/>
					<outline text="blogUrlWebsite: undefined," created="Wed, 12 Jan 2022 17:51:16 GMT"/>
					<outline text="blogUseCache: false," created="Wed, 12 Jan 2022 17:51:36 GMT"/>
					<outline text="" created="Wed, 12 Jan 2022 18:31:44 GMT"/>
					<outline text="urlTwitterServer: &quot;http://drummer.scripting.com/&quot;," created="Wed, 12 Jan 2022 17:27:10 GMT"/>
					<outline text="" created="Wed, 12 Jan 2022 18:22:17 GMT"/>
					<outline text="" created="Wed, 12 Jan 2022 18:22:18 GMT"/>
					<outline text="oauth_token: undefined," created="Wed, 12 Jan 2022 17:04:22 GMT"/>
					<outline text="oauth_token_secret: undefined" created="Wed, 12 Jan 2022 17:04:22 GMT"/>
					<outline text="};" created="Wed, 12 Jan 2022 17:03:28 GMT"/>
					</outline>
				<outline text="" created="Tue, 11 Jan 2022 14:59:10 GMT"/>
				<outline text="function readConfig (f, theConfig, callback) { ">
					<outline text="fs.readFile (f, function (err, jsontext) {">
						<outline text="if (!err) {">
							<outline text="try {">
								<outline text="var jstruct = JSON.parse (jsontext);"/>
								<outline text="for (var x in jstruct) {">
									<outline text="theConfig [x] = jstruct [x];"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="catch (err) {">
								<outline text="console.log (&quot;readConfig: err.message == &quot; + err.message);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="callback ();"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function buildParamList (paramtable, flPrivate) {" created="Sat, 09 Aug 2014 15:39:08 GMT" pgfnum="43181">
					<outline text="Changes" isComment="true" created="Wed, 04 Aug 2021 14:47:01 GMT">
						<outline text="1/12/22; 12:26:36 PM by DW" created="Wed, 12 Jan 2022 17:26:35 GMT">
							<outline text="Adapted from Drummer home." created="Wed, 12 Jan 2022 17:26:37 GMT"/>
							</outline>
						<outline text="8/4/21; 10:47:04 AM by DW" created="Wed, 04 Aug 2021 14:47:03 GMT">
							<outline text="Copied twBuildParamList. If an element of params is undefined, don't include it. We were encoding it as a string, &quot;undefined&quot; and all of a sudden on the other side, in davetwitter, it was calling it an error. It is pretty errorish, but why it started now, that's a mystery." created="Wed, 04 Aug 2021 14:47:04 GMT"/>
							</outline>
						</outline>
					<outline text="var s = &quot;&quot;;" created="Sat, 09 Aug 2014 15:39:47 GMT" pgfnum="43188"/>
					<outline text="if (flPrivate) {" created="Sat, 09 Aug 2014 20:17:16 GMT" pgfnum="43185">
						<outline text="paramtable.flprivate = &quot;true&quot;;" created="Sat, 09 Aug 2014 15:43:48 GMT" pgfnum="43208"/>
						<outline text="}" created="Sat, 09 Aug 2014 20:17:19 GMT" pgfnum="43186"/>
						</outline>
					<outline text="for (var x in paramtable) {" created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186">
						<outline text="if (paramtable [x] !== undefined) { //8/4/21 by DW" created="Wed, 04 Aug 2021 14:48:52 GMT">
							<outline text="if (s.length &gt; 0) {" created="Sat, 09 Aug 2014 15:40:02 GMT" pgfnum="43189">
								<outline text="s += &quot;&amp;&quot;;" created="Sat, 09 Aug 2014 15:40:08 GMT" pgfnum="43190"/>
								<outline text="}" created="Sat, 09 Aug 2014 15:40:14 GMT" pgfnum="43191"/>
								</outline>
							<outline text="s += x + &quot;=&quot; + encodeURIComponent (paramtable [x]);" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
							<outline text="}" created="Wed, 04 Aug 2021 14:49:01 GMT"/>
							</outline>
						<outline text="}" created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187"/>
						</outline>
					<outline text="return (s);" created="Sat, 09 Aug 2014 15:40:54 GMT" pgfnum="43193"/>
					<outline text="}" created="Sat, 09 Aug 2014 15:39:35 GMT" pgfnum="43185"/>
					</outline>
				<outline text="function httpReadUrl (url, callback) {">
					<outline text="request (url, function (err, response, data) {">
						<outline text="if (!err &amp;&amp; (response.statusCode == 200)) {">
							<outline text="callback (undefined, data.toString ());"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (!err) {">
								<outline text="err = {">
									<outline text="message: &quot;Can't read the file because there was an error. Code == &quot; + response.statusCode + &quot;.&quot;"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function httpPost (url, data, callback) {">
					<outline text="var theRequest = {">
						<outline text="method: &quot;POST&quot;,"/>
						<outline text="body: data," created="Wed, 12 Jan 2022 17:39:56 GMT"/>
						<outline text="url: url"/>
						<outline text="};"/>
						</outline>
					<outline text="request (theRequest, function (err, response, data) {">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
							<outline text="if (response.statusCode != 200) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
								<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
								<outline text="callback ({message});" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
								<outline text="callback (undefined, data) "/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function servercall (path, params, flAuthenticated, callback) {">
					<outline text="Changes" isComment="true">
						<outline text="1/12/22; 12:26:36 PM by DW" created="Wed, 12 Jan 2022 17:26:35 GMT">
							<outline text="Adapted from Drummer home." created="Wed, 12 Jan 2022 17:26:37 GMT"/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.oauth_token = config.oauth_token;"/>
						<outline text="params.oauth_token_secret = config.oauth_token_secret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = config.urlTwitterServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="httpReadUrl (url, callback);" created="Wed, 12 Jan 2022 17:34:03 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="function serverpost (path, params, flAuthenticated, filedata, callback) {">
					<outline text="Changes" isComment="true">
						<outline text="1/12/22; 12:26:36 PM by DW" created="Wed, 12 Jan 2022 17:26:35 GMT">
							<outline text="Adapted from Drummer home." created="Wed, 12 Jan 2022 17:26:37 GMT"/>
							</outline>
						<outline text="8/2/21; 2:19:56 PM by DW" created="Mon, 02 Aug 2021 18:19:55 GMT">
							<outline text="If filedata is not a PlainObject or a string, convert it to a string." created="Mon, 02 Aug 2021 18:19:58 GMT"/>
							</outline>
						<outline text="2/25/21; 1:01:58 PM by DW">
							<outline text="A special form of servercall for posts."/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (!$.isPlainObject (filedata) &amp;&amp; (typeof (filedata) != &quot;string&quot;)) { //8/2/21 by DW" isComment="true" created="Mon, 02 Aug 2021 18:36:54 GMT">
						<outline text="filedata = filedata.toString ();" created="Mon, 02 Aug 2021 18:38:49 GMT"/>
						<outline text="}" created="Mon, 02 Aug 2021 18:38:43 GMT"/>
						</outline>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.oauth_token = config.oauth_token;"/>
						<outline text="params.oauth_token_secret = config.oauth_token_secret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = config.urlTwitterServer + path + &quot;?&quot; + buildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="httpPost (url, filedata, callback);" created="Wed, 12 Jan 2022 17:34:03 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="function getDateString (theDate=new Date ()) {" created="Wed, 12 Jan 2022 17:59:43 GMT">
					<outline text="return (new Date (theDate).toUTCString ());" created="Wed, 12 Jan 2022 17:59:59 GMT"/>
					<outline text="}" created="Wed, 12 Jan 2022 17:59:51 GMT"/>
					</outline>
				<outline text="" created="Wed, 12 Jan 2022 17:25:37 GMT"/>
				<outline text="function readJournalFolderIntoOutline (folder, callback) {" created="Tue, 11 Jan 2022 15:00:51 GMT">
					<outline text="var now = new Date ();" created="Wed, 12 Jan 2022 18:00:27 GMT"/>
					<outline text="var theOutline = {" created="Tue, 11 Jan 2022 15:28:51 GMT">
						<outline text="opml: {" created="Tue, 11 Jan 2022 15:29:01 GMT">
							<outline text="head: {" created="Tue, 11 Jan 2022 15:29:06 GMT">
								<outline text="}," created="Tue, 11 Jan 2022 15:29:10 GMT"/>
								</outline>
							<outline text="body: {" created="Tue, 11 Jan 2022 15:29:11 GMT">
								<outline text="}" created="Tue, 11 Jan 2022 15:29:15 GMT"/>
								</outline>
							<outline text="}" created="Tue, 11 Jan 2022 15:29:05 GMT"/>
							</outline>
						<outline text="};" created="Tue, 11 Jan 2022 15:28:55 GMT"/>
						</outline>
					<outline text="function setupOpmlHead () {" created="Wed, 12 Jan 2022 18:10:07 GMT">
						<outline text="Changes" isComment="true" created="Wed, 12 Jan 2022 18:11:36 GMT">
							<outline text="1/12/22; 1:11:38 PM by DW" created="Wed, 12 Jan 2022 18:11:38 GMT">
								<outline text="If we don't do it this way we end up with values with &quot;undefined&quot;: in the head section of the OPML on the other side. " created="Wed, 12 Jan 2022 18:11:39 GMT"/>
								</outline>
							</outline>
						<outline text="var head = {" created="Wed, 12 Jan 2022 18:10:23 GMT">
							<outline text="title: config.blogTitle," created="Wed, 12 Jan 2022 17:53:03 GMT"/>
							<outline text="description: config.blogDescription," created="Wed, 12 Jan 2022 17:53:11 GMT"/>
							<outline text="dateCreated: getDateString (config.blogWhenCreated)," created="Wed, 12 Jan 2022 17:53:20 GMT"/>
							<outline text="dateModified: getDateString (now)," created="Wed, 12 Jan 2022 17:58:52 GMT"/>
							<outline text="timeZoneOffset: config.blogTimeZoneOffset," created="Wed, 12 Jan 2022 17:53:59 GMT"/>
							<outline text="copyright: config.blogCopyright," created="Wed, 12 Jan 2022 17:54:34 GMT"/>
							<outline text="urlHeaderImage: config.blogUrlHeaderImage," created="Wed, 12 Jan 2022 17:54:53 GMT"/>
							<outline text="urlTemplate: config.blogUrlTemplate," created="Wed, 12 Jan 2022 17:55:17 GMT"/>
							<outline text="urlHomePageTemplate: config.blogUrlHomePageTemplate," created="Wed, 12 Jan 2022 17:55:33 GMT"/>
							<outline text="urlGlossary: config.blogUrlGlossary," created="Wed, 12 Jan 2022 17:56:08 GMT"/>
							<outline text="urlAboutOpml: config.blogUrlAboutOpml," created="Wed, 12 Jan 2022 17:56:16 GMT"/>
							<outline text="urlBlogWebsite: config.blogUrlWebsite," created="Wed, 12 Jan 2022 17:56:40 GMT"/>
							<outline text="flOldSchoolUseCache: config.blogUseCache" created="Wed, 12 Jan 2022 17:56:51 GMT"/>
							<outline text="};" created="Wed, 12 Jan 2022 18:10:30 GMT"/>
							</outline>
						<outline text="for (var x in head) {" created="Wed, 12 Jan 2022 18:10:47 GMT">
							<outline text="if (head [x] !== undefined) {" created="Wed, 12 Jan 2022 18:10:52 GMT">
								<outline text="theOutline.opml.head [x] = head [x];" created="Wed, 12 Jan 2022 18:11:10 GMT"/>
								<outline text="}" created="Wed, 12 Jan 2022 18:11:02 GMT"/>
								</outline>
							<outline text="}" created="Wed, 12 Jan 2022 18:11:03 GMT"/>
							</outline>
						<outline text="}" created="Wed, 12 Jan 2022 18:10:15 GMT"/>
						</outline>
					<outline text="function fixOutlineAttributes () {" isComment="true" created="Wed, 12 Jan 2022 19:39:45 GMT">
						<outline text="Changes" isComment="true" created="Wed, 12 Jan 2022 19:39:53 GMT">
							<outline text="1/12/22; 2:39:55 PM by DW" created="Wed, 12 Jan 2022 19:39:54 GMT">
								<outline text="As we publish, remove the underscore from the names of atts that begin with underscore." created="Wed, 12 Jan 2022 19:39:56 GMT"/>
								</outline>
							</outline>
						<outline text="function visitSubs (theNode) {" created="Wed, 12 Jan 2022 19:40:39 GMT">
							<outline text="if (theNode.subs !== undefined) {" created="Wed, 12 Jan 2022 19:40:56 GMT">
								<outline text="visitSubs (sub);" created="Wed, 12 Jan 2022 19:43:50 GMT"/>
								<outline text="theNode.subs.forEach (function (sub) {" created="Wed, 12 Jan 2022 19:41:05 GMT">
									<outline text="var newatts = new Object ();" created="Wed, 12 Jan 2022 19:54:06 GMT"/>
									<outline text="for (var x in sub) {" created="Wed, 12 Jan 2022 19:54:06 GMT">
										<outline text="if (utils.beginsWith (x, &quot;_&quot;)) {" created="Wed, 12 Jan 2022 19:55:01 GMT">
											<outline text="newatts [utils.stringDelete (x, 1, 1)] = sub [x];" created="Wed, 12 Jan 2022 19:55:08 GMT"/>
											<outline text="}" created="Wed, 12 Jan 2022 19:55:02 GMT"/>
											</outline>
										<outline text="else {" created="Wed, 12 Jan 2022 19:55:35 GMT">
											<outline text="newatts [x] = sub [x];" created="Wed, 12 Jan 2022 19:55:37 GMT"/>
											</outline>
										<outline text="}" created="Wed, 12 Jan 2022 19:54:49 GMT"/>
										</outline>
									<outline text="" created="Wed, 12 Jan 2022 19:54:06 GMT"/>
									<outline text="" created="Wed, 12 Jan 2022 19:54:06 GMT"/>
									<outline text="" created="Wed, 12 Jan 2022 19:54:06 GMT"/>
									<outline text="for (var x in sub) {" created="Wed, 12 Jan 2022 19:41:22 GMT">
										<outline text="if (utils.beginsWith (x, &quot;_&quot;)) {" created="Wed, 12 Jan 2022 19:41:38 GMT">
											<outline text="sub [utils.stringDelete (x, 1, 1)] = sub [x];" created="Wed, 12 Jan 2022 19:42:03 GMT"/>
											<outline text="}" created="Wed, 12 Jan 2022 19:41:54 GMT"/>
											</outline>
										<outline text="}" created="Wed, 12 Jan 2022 19:41:33 GMT"/>
										</outline>
									<outline text="});" created="Wed, 12 Jan 2022 19:41:17 GMT"/>
									</outline>
								<outline text="}" created="Wed, 12 Jan 2022 19:41:05 GMT"/>
								</outline>
							<outline text="}" created="Wed, 12 Jan 2022 19:40:52 GMT"/>
							</outline>
						<outline text="visitSubs (theOutline.opml.body);" created="Wed, 12 Jan 2022 19:41:22 GMT"/>
						<outline text="}" created="Wed, 12 Jan 2022 19:39:49 GMT"/>
						</outline>
					<outline text="function getMonthName (d) {" created="Tue, 11 Jan 2022 16:06:44 GMT">
						<outline text="return (new Date (d).toLocaleString (&quot;default&quot;, {month: &quot;long&quot;}));" created="Tue, 11 Jan 2022 16:06:55 GMT"/>
						<outline text="}" created="Tue, 11 Jan 2022 16:07:41 GMT"/>
						</outline>
					<outline text="function isFolder (f) { ">
						<outline text="return (fs.statSync (f).isDirectory ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function addJournalFileToOutline (fname, mdtext) {" created="Tue, 11 Jan 2022 15:28:31 GMT">
						<outline text="if (fname.length &gt; 0) {" created="Tue, 11 Jan 2022 15:29:51 GMT">
							<outline text="if (fname [0] != &quot;.&quot;) { //not .DS_Store" created="Tue, 11 Jan 2022 15:32:19 GMT">
								<outline text="console.log (&quot;addJournalFileToOutline: fname == &quot;+ fname + &quot;, mdtext.length == &quot; + mdtext.length);" created="Tue, 11 Jan 2022 15:20:38 GMT"/>
								<outline text="" created="Wed, 12 Jan 2022 17:24:21 GMT"/>
								<outline text="var splits = (fname.split (&quot;.&quot;) [0]).split (&quot;_&quot;);" created="Tue, 11 Jan 2022 15:32:54 GMT"/>
								<outline text="var year = splits [0];" created="Tue, 11 Jan 2022 15:31:42 GMT"/>
								<outline text="var month = splits [1];" created="Tue, 11 Jan 2022 15:33:47 GMT"/>
								<outline text="var day = splits [2];" created="Tue, 11 Jan 2022 15:33:54 GMT"/>
								<outline text="" created="Tue, 11 Jan 2022 15:54:41 GMT"/>
								<outline text="var theDate = new Date (0);" created="Tue, 11 Jan 2022 15:36:11 GMT"/>
								<outline text="theDate.setFullYear (year);" created="Tue, 11 Jan 2022 15:39:56 GMT"/>
								<outline text="theDate.setMonth (month - 1);" created="Tue, 11 Jan 2022 15:40:02 GMT"/>
								<outline text="theDate.setDate (day);" created="Tue, 11 Jan 2022 15:40:11 GMT"/>
								<outline text="" created="Tue, 11 Jan 2022 15:56:17 GMT"/>
								<outline text="var monthname = getMonthName (theDate);" created="Tue, 11 Jan 2022 15:54:41 GMT"/>
								<outline text="" created="Tue, 11 Jan 2022 15:51:16 GMT"/>
								<outline text="function bumpDate () { //every node needs a unique created att" created="Tue, 11 Jan 2022 17:15:40 GMT">
									<outline text="theDate.setSeconds (theDate.getSeconds () + 1);" created="Tue, 11 Jan 2022 17:16:14 GMT"/>
									<outline text="return (theDate);" created="Tue, 11 Jan 2022 17:16:14 GMT"/>
									<outline text="}" created="Tue, 11 Jan 2022 17:15:50 GMT"/>
									</outline>
								<outline text="function getSub (parent, theSub) {" created="Thu, 03 Jun 2021 17:45:34 GMT">
									<outline text="if (parent.subs === undefined) {" created="Thu, 03 Jun 2021 17:55:56 GMT">
										<outline text="parent.subs = new Array ();" created="Thu, 03 Jun 2021 17:56:08 GMT"/>
										<outline text="}" created="Thu, 03 Jun 2021 17:56:04 GMT"/>
										</outline>
									<outline text="for (var i = 0; i &lt; parent.subs.length; i++) {" created="Thu, 03 Jun 2021 17:50:05 GMT">
										<outline text="var item = parent.subs [i];" created="Thu, 03 Jun 2021 17:50:31 GMT"/>
										<outline text="if (item.text == theSub.text) { //it's already there" created="Thu, 03 Jun 2021 17:50:57 GMT">
											<outline text="return (item);" created="Thu, 03 Jun 2021 17:51:34 GMT"/>
											<outline text="}" created="Thu, 03 Jun 2021 17:51:09 GMT"/>
											</outline>
										<outline text="}" created="Thu, 03 Jun 2021 17:50:26 GMT"/>
										</outline>
									<outline text="if (theSub.subs === undefined) {" created="Thu, 03 Jun 2021 17:57:39 GMT">
										<outline text="theSub.subs = new Array ();" created="Thu, 03 Jun 2021 17:57:56 GMT"/>
										<outline text="}" created="Thu, 03 Jun 2021 17:57:52 GMT"/>
										</outline>
									<outline text="parent.subs.unshift (theSub);" created="Thu, 03 Jun 2021 17:52:11 GMT"/>
									<outline text="return (parent.subs [0]);" created="Thu, 03 Jun 2021 17:52:11 GMT"/>
									<outline text="}" created="Thu, 03 Jun 2021 17:45:56 GMT"/>
									</outline>
								<outline text="" created="Tue, 11 Jan 2022 15:52:22 GMT"/>
								<outline text="var theMonth = getSub (theOutline.opml.body, {" created="Thu, 03 Jun 2021 15:54:15 GMT">
									<outline text="text: monthname + &quot; &quot; + year," created="Thu, 03 Jun 2021 16:13:03 GMT"/>
									<outline text="type: &quot;calendarMonth&quot;," created="Thu, 03 Jun 2021 19:01:38 GMT"/>
									<outline text="created: bumpDate ().toUTCString ()," created="Tue, 11 Jan 2022 17:12:51 GMT"/>
									<outline text="name: monthname.toLowerCase () + year" created="Thu, 03 Jun 2021 19:02:37 GMT"/>
									<outline text="});" created="Thu, 03 Jun 2021 16:12:55 GMT"/>
									</outline>
								<outline text="var theDay = getSub (theMonth, {" created="Thu, 03 Jun 2021 15:54:15 GMT">
									<outline text="text: monthname + &quot; &quot; + Number (day)," created="Thu, 03 Jun 2021 16:13:03 GMT"/>
									<outline text="type: &quot;calendarDay&quot;," created="Thu, 03 Jun 2021 19:01:38 GMT"/>
									<outline text="created: bumpDate ().toUTCString ()," created="Tue, 11 Jan 2022 17:12:51 GMT"/>
									<outline text="name: day" created="Thu, 03 Jun 2021 19:03:47 GMT"/>
									<outline text="});" created="Thu, 03 Jun 2021 16:12:55 GMT"/>
									</outline>
								<outline text="" created="Thu, 03 Jun 2021 17:53:12 GMT"/>
								<outline text="var theDayOutline = opml.markdownToOutline (mdtext, {flAddUnderscores: false});" created="Tue, 11 Jan 2022 16:17:57 GMT"/>
								<outline text="theDay.subs = theDayOutline.opml.body.subs;" created="Tue, 11 Jan 2022 16:48:27 GMT"/>
								<outline text="theDay.subs.forEach (function (item) {" created="Tue, 11 Jan 2022 17:12:07 GMT">
									<outline text="item.type = &quot;markdown&quot;;" created="Tue, 11 Jan 2022 17:12:27 GMT"/>
									<outline text="item.created = bumpDate ().toUTCString ();" created="Tue, 11 Jan 2022 17:12:51 GMT"/>
									<outline text="});" created="Tue, 11 Jan 2022 17:12:23 GMT"/>
									</outline>
								<outline text="}" created="Tue, 11 Jan 2022 15:32:34 GMT"/>
								</outline>
							<outline text="}" created="Tue, 11 Jan 2022 15:32:18 GMT"/>
							</outline>
						<outline text="}" created="Tue, 11 Jan 2022 15:28:46 GMT"/>
						</outline>
					<outline text="function readNextFile (list, ix) {" created="Tue, 11 Jan 2022 15:18:54 GMT">
						<outline text="if (ix &gt;= list.length) {" created="Tue, 11 Jan 2022 15:19:22 GMT">
							<outline text="if (callback !== undefined) {" created="Tue, 11 Jan 2022 15:19:31 GMT">
								<outline text="setupOpmlHead ();" created="Wed, 12 Jan 2022 18:12:39 GMT"/>
								<outline text="fixOutlineAttributes ();" isComment="true" created="Wed, 12 Jan 2022 19:39:29 GMT"/>
								<outline text="callback (undefined, theOutline);" created="Tue, 11 Jan 2022 15:19:39 GMT"/>
								<outline text="}" created="Tue, 11 Jan 2022 15:19:42 GMT"/>
								</outline>
							<outline text="}" created="Tue, 11 Jan 2022 15:19:44 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 11 Jan 2022 15:19:51 GMT">
							<outline text="var fname = list [ix];" created="Tue, 11 Jan 2022 15:27:52 GMT"/>
							<outline text="var f = folder + fname;" created="Tue, 11 Jan 2022 15:20:43 GMT"/>
							<outline text="if (isFolder (f)) {" created="Tue, 11 Jan 2022 23:28:33 GMT">
								<outline text="readNextFile (list, ix + 1);" created="Tue, 11 Jan 2022 15:23:43 GMT"/>
								<outline text="}" created="Tue, 11 Jan 2022 23:28:41 GMT"/>
								</outline>
							<outline text="else {" created="Tue, 11 Jan 2022 23:28:42 GMT">
								<outline text="fs.readFile (f, function (err, data) {" created="Tue, 11 Jan 2022 15:19:55 GMT">
									<outline text="if (err) {" created="Tue, 11 Jan 2022 15:20:18 GMT">
										<outline text="console.log (&quot;readJournalFolderIntoOutline: f == &quot;+ f + &quot;, err.message == &quot; + err.message);" created="Tue, 11 Jan 2022 15:20:38 GMT"/>
										<outline text="}" created="Tue, 11 Jan 2022 15:20:32 GMT"/>
										</outline>
									<outline text="else {" created="Tue, 11 Jan 2022 15:20:33 GMT">
										<outline text="addJournalFileToOutline (fname, data.toString ());" created="Tue, 11 Jan 2022 15:27:19 GMT"/>
										<outline text="}" created="Tue, 11 Jan 2022 15:20:35 GMT"/>
										</outline>
									<outline text="readNextFile (list, ix + 1);" created="Tue, 11 Jan 2022 15:23:43 GMT"/>
									<outline text="});" created="Tue, 11 Jan 2022 15:20:13 GMT"/>
									</outline>
								<outline text="}" created="Tue, 11 Jan 2022 23:28:44 GMT"/>
								</outline>
							<outline text="}" created="Tue, 11 Jan 2022 15:19:54 GMT"/>
							</outline>
						<outline text="}" created="Tue, 11 Jan 2022 15:19:14 GMT"/>
						</outline>
					<outline text="fs.readdir (folder, function (err, list) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;readJournalFolderIntoOutline: err.message == &quot; + err.message);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (list !== undefined) { ">
								<outline text="readNextFile (list, 0);" created="Tue, 11 Jan 2022 15:18:27 GMT"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Tue, 11 Jan 2022 15:01:22 GMT"/>
					</outline>
				<outline text="function saveMyLogSeqOpml (callback) {" created="Tue, 11 Jan 2022 23:16:23 GMT">
					<outline text="readJournalFolderIntoOutline (config.logSeqJournalFolder, function (err, theOutline) {" created="Tue, 11 Jan 2022 23:17:04 GMT">
						<outline text="if (err) {" created="Tue, 11 Jan 2022 23:18:08 GMT">
							<outline text="console.log (&quot;saveMyLogSeqOpml: err.message == &quot; + err.message);" created="Tue, 11 Jan 2022 23:18:28 GMT"/>
							<outline text="}" created="Tue, 11 Jan 2022 23:18:10 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 11 Jan 2022 23:18:11 GMT">
							<outline text="var opmltext = opml.stringify (theOutline);" created="Tue, 11 Jan 2022 16:17:57 GMT"/>
							<outline text="if (config.opmlJournalFile !== undefined) {" created="Thu, 13 Jan 2022 15:38:06 GMT">
								<outline text="fs.writeFile (config.opmlJournalFile, opmltext, function (err) {" created="Tue, 11 Jan 2022 23:32:00 GMT">
									<outline text="if (err) {" created="Tue, 11 Jan 2022 23:18:08 GMT">
										<outline text="console.log (&quot;saveMyLogSeqOpml: err.message == &quot; + err.message);" created="Tue, 11 Jan 2022 23:18:28 GMT"/>
										<outline text="}" created="Tue, 11 Jan 2022 23:18:10 GMT"/>
										</outline>
									<outline text="});" created="Tue, 11 Jan 2022 23:33:08 GMT"/>
									</outline>
								<outline text="}" created="Thu, 13 Jan 2022 15:38:16 GMT"/>
								</outline>
							<outline text="if (callback !== undefined) {" created="Wed, 12 Jan 2022 15:55:40 GMT">
								<outline text="callback (undefined, opmltext);" created="Wed, 12 Jan 2022 15:55:46 GMT"/>
								<outline text="}" created="Wed, 12 Jan 2022 15:55:45 GMT"/>
								</outline>
							<outline text="}" created="Tue, 11 Jan 2022 23:18:13 GMT"/>
							</outline>
						<outline text="});" created="Tue, 11 Jan 2022 23:17:14 GMT"/>
						</outline>
					<outline text="}" created="Tue, 11 Jan 2022 23:16:36 GMT"/>
					</outline>
				<outline text="function makeFilePublic (relpath, callback) {" isComment="true" created="Thu, 13 Jan 2022 21:12:37 GMT">
					<outline text="servercall (&quot;makefilepublic&quot;, {relpath}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Sat, 20 Feb 2021 18:06:44 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, data);"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Thu, 13 Jan 2022 21:13:10 GMT"/>
					</outline>
				<outline text="" created="Wed, 12 Jan 2022 17:00:12 GMT"/>
				<outline text="readConfig (&quot;config.json&quot;, config, function () {" created="Sat, 11 Dec 2021 22:41:37 GMT">
					<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Sun, 02 Jan 2022 17:10:45 GMT"/>
					<outline text="saveMyLogSeqOpml (function (err, opmltext) {" created="Wed, 12 Jan 2022 17:05:37 GMT">
						<outline text="if (err) {" created="Wed, 12 Jan 2022 17:06:30 GMT">
							<outline text="console.log (&quot;logseqpublish: err.message == &quot; + err.message);" created="Wed, 12 Jan 2022 17:06:33 GMT"/>
							<outline text="}" created="Wed, 12 Jan 2022 17:07:01 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 12 Jan 2022 17:07:02 GMT">
							<outline text="console.log (&quot;logseqpublish: opmltext.length == &quot; + opmltext.length);" created="Wed, 12 Jan 2022 17:07:07 GMT"/>
							<outline text="const params = {" created="Fri, 14 Jan 2022 00:30:05 GMT">
								<outline text="relpath: &quot;blog.opml&quot;, " created="Fri, 14 Jan 2022 00:30:25 GMT"/>
								<outline text="type: &quot;text/xml&quot;" created="Fri, 14 Jan 2022 00:30:31 GMT"/>
								<outline text="};" created="Fri, 14 Jan 2022 00:30:14 GMT"/>
								</outline>
							<outline text="serverpost (&quot;publishfile&quot;, params, true, opmltext, function (err, data) {">
								<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
									<outline text="console.log (&quot;publishfile: err.message == &quot; + err.message);" created="Sat, 20 Feb 2021 17:20:56 GMT"/>
									<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
									</outline>
								<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
									<outline text="httpReadUrl (&quot;http://drummercms.scripting.com/build?blog=&quot; + config.twScreenName, function (err, data) {" created="Wed, 12 Jan 2022 18:27:16 GMT">
										<outline text="if (err) {" created="Wed, 12 Jan 2022 18:27:46 GMT">
											<outline text="console.log (&quot;drummerCms: err.message == &quot; + err.message);" created="Wed, 12 Jan 2022 18:27:49 GMT"/>
											<outline text="}" created="Wed, 12 Jan 2022 18:28:00 GMT"/>
											</outline>
										<outline text="else {" created="Wed, 12 Jan 2022 18:28:02 GMT">
											<outline text="console.log (data);" created="Wed, 12 Jan 2022 18:27:49 GMT"/>
											<outline text="}" created="Wed, 12 Jan 2022 18:28:03 GMT"/>
											</outline>
										<outline text="});" created="Wed, 12 Jan 2022 18:27:42 GMT"/>
										</outline>
									<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
									</outline>
								<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
								</outline>
							<outline text="serverpost (&quot;writewholefile&quot;, {relpath: &quot;blog.opml&quot;}, true, opmltext, function (err, data) {" isComment="true">
								<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
									<outline text="console.log (&quot;writeWholeFile: err.message == &quot; + err.message);" created="Sat, 20 Feb 2021 17:20:56 GMT"/>
									<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
									</outline>
								<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
									<outline text="makeFilePublic (&quot;blog.opml&quot;, function (err, data) { //1/13/22 by DW" created="Thu, 13 Jan 2022 21:15:28 GMT">
										<outline text="if (err) {" created="Wed, 12 Jan 2022 18:27:46 GMT">
											<outline text="console.log (&quot;makeFilePublic: err.message == &quot; + err.message);" created="Wed, 12 Jan 2022 18:27:49 GMT"/>
											<outline text="}" created="Wed, 12 Jan 2022 18:28:00 GMT"/>
											</outline>
										<outline text="else {" created="Wed, 12 Jan 2022 18:28:02 GMT">
											<outline text="console.log (&quot;makeFilePublic: data == &quot; + data);" created="Wed, 12 Jan 2022 18:27:49 GMT"/>
											<outline text="httpReadUrl (&quot;http://drummercms.scripting.com/build?blog=&quot; + config.twScreenName, function (err, data) {" created="Wed, 12 Jan 2022 18:27:16 GMT">
												<outline text="if (err) {" created="Wed, 12 Jan 2022 18:27:46 GMT">
													<outline text="console.log (&quot;drummerCms: err.message == &quot; + err.message);" created="Wed, 12 Jan 2022 18:27:49 GMT"/>
													<outline text="}" created="Wed, 12 Jan 2022 18:28:00 GMT"/>
													</outline>
												<outline text="else {" created="Wed, 12 Jan 2022 18:28:02 GMT">
													<outline text="console.log (data);" created="Wed, 12 Jan 2022 18:27:49 GMT"/>
													<outline text="}" created="Wed, 12 Jan 2022 18:28:03 GMT"/>
													</outline>
												<outline text="});" created="Wed, 12 Jan 2022 18:27:42 GMT"/>
												</outline>
											<outline text="}" created="Wed, 12 Jan 2022 18:28:03 GMT"/>
											</outline>
										<outline text="});" created="Thu, 13 Jan 2022 21:16:02 GMT"/>
										</outline>
									<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
									</outline>
								<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
								</outline>
							<outline text="}" created="Wed, 12 Jan 2022 17:07:03 GMT"/>
							</outline>
						<outline text="});" created="Wed, 12 Jan 2022 17:06:24 GMT"/>
						</outline>
					<outline text="});" created="Sat, 11 Dec 2021 22:42:05 GMT"/>
					</outline>
				</outline>
			<outline text="config.json" isComment="true" created="Thu, 13 Jan 2022 15:40:07 GMT">
				<outline text="{">
					<outline text="&quot;twScreenName&quot;: &quot;mylogseqblog&quot;,"/>
					<outline text=""/>
					<outline text="&quot;logSeqJournalFolder&quot;: &quot;/Users/bullmancuso/LogSeq/journals/&quot;,"/>
					<outline text="&quot;opmlJournalFile&quot;: &quot;/Users/bullmancuso/LogSeq/journal.opml&quot;,"/>
					<outline text=""/>
					<outline text="&quot;blogTitle&quot;: &quot;My Outline Blog&quot;,"/>
					<outline text="&quot;blogDescription&quot;: &quot;Connecting LogSeq for writing with Drummer for publishing.&quot;,"/>
					<outline text="&quot;blogWhenCreated&quot;: &quot;Wed, 12 Jan 2022 17:45:25 GMT&quot;,"/>
					<outline text="&quot;blogTimeZoneOffset&quot;: -5,"/>
					<outline text="&quot;blogCopyright&quot;: &quot;Copyright 2022, Bull Mancuso Partners.&quot;,"/>
					<outline text="&quot;blogUrlHeaderImage&quot;: &quot;http://scripting.com/images/2021/07/07/hopperGasStation.png&quot;,"/>
					<outline text=""/>
					<outline text="&quot;oauth_token&quot;: &quot;abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz&quot;,"/>
					<outline text="&quot;oauth_token_secret&quot;: &quot;abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz&quot;"/>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Thu, 13 Jan 2022 15:33:49 GMT">
				<outline text="# myLogseqBlog">
					<outline text="A cross-platform Node app that publishes a LogSeq journal as a blog via Drummer"/>
					</outline>
				<outline text="### How to install" created="Thu, 13 Jan 2022 15:45:13 GMT">
					<outline text="1. &lt;a href=&quot;https://github.com/scripting/myLogseqBlog/archive/refs/heads/main.zip&quot;&gt;Download&lt;/a&gt; the app from the repo. It's a .zip file. When you uncompress you should see a folder named &lt;i&gt;myLogseqBlog-main.&lt;/i&gt;" created="Thu, 13 Jan 2022 15:45:19 GMT"/>
					<outline text="2. Open the folder in the Terminal app. On a Mac you can do this by dragging the folder onto the Terminal app icon." created="Thu, 13 Jan 2022 15:45:41 GMT"/>
					<outline text="3. Type &lt;i&gt;npm install&lt;/i&gt; at the command prompt. A bunch of messages will scroll by." created="Thu, 13 Jan 2022 15:46:15 GMT"/>
					<outline text="4. Edit config.json following the instructions below." created="Thu, 13 Jan 2022 15:46:38 GMT"/>
					</outline>
				<outline text="### Setting up config.json" created="Thu, 13 Jan 2022 15:47:10 GMT">
					<outline text="There are a bunch of values you have to set up in config.json to configure your blog. I've provided an example config.json file with those values specified, you just have to change them. " created="Thu, 13 Jan 2022 15:47:21 GMT">
						<outline text="1. twScreenName -- your Twitter screen name." created="Thu, 13 Jan 2022 15:52:05 GMT"/>
						<outline text="2. logSeqJournalFolder -- the path to your LogSeq journals folder that we will build your blog from. " created="Thu, 13 Jan 2022 15:56:36 GMT"/>
						<outline text="3. opmlJournalFile -- optional, a path to the OPML file that myLogseqBlog generates. You don't need this file to publish your blog." created="Thu, 13 Jan 2022 15:57:29 GMT"/>
						<outline text="4. blogTitle -- the title of your blog, this is displayed at the top of every page and in your RSS feed. " created="Thu, 13 Jan 2022 15:58:41 GMT"/>
						<outline text="5. blogDescription -- describes your blog, could be a slogan, whatever you like, it's displayed in smaller type under the title, and in your feed." created="Thu, 13 Jan 2022 15:59:04 GMT"/>
						<outline text="6. blogWhenCreated -- the date and time when your blog started. It should probably be the date and time when you installed this software. " created="Thu, 13 Jan 2022 15:59:08 GMT"/>
						<outline text="7. blogTimeZoneOffset -- your blog will appear to be in this timezone. It's the offset from GMT of that timezone. If you're in New York, it would be -5. In England it would be 0. In Beijing it would be +8." created="Thu, 13 Jan 2022 15:59:15 GMT"/>
						<outline text="8. blogCopyright -- a copyright notice. You can leave this empty if you don't have one. " created="Thu, 13 Jan 2022 15:59:24 GMT"/>
						<outline text="9. blogUrlHeaderImage -- the URL of a wide rectangular image to be displayed at the top of every page. There is a default image if you don't provide one. " created="Thu, 13 Jan 2022 15:59:37 GMT"/>
						<outline text="10. oauth_token, oauth_token_secret -- myLogseqBlog uses these values and the next one to identify you to the Drummer system, so it knows which account to store your outline under. It is not saved in the OPML file it generates. The next section explains how to get these values. " created="Thu, 13 Jan 2022 15:59:40 GMT"/>
						</outline>
					</outline>
				<outline text="### Drummer setup" created="Thu, 13 Jan 2022 15:47:42 GMT">
					<outline text="Drummer uses Twitter for identity, so you will need a Twitter account to associate with your blog." created="Thu, 13 Jan 2022 15:47:47 GMT"/>
					<outline text="If your Twitter username is &lt;i&gt;lisasimpson,&lt;/i&gt; your blog will be at this URL:" created="Thu, 13 Jan 2022 15:48:32 GMT">
						<outline text="http://oldschool.scripting.com/lisasimpson/" created="Thu, 13 Jan 2022 15:49:08 GMT"/>
						</outline>
					<outline text="To establish this connection, go to the &lt;a href=&quot;http://drummer.scripting.com/&quot;&gt;Drummer website&lt;/a&gt; and log in with your Twitter account. Twitter will warn you that Drummer can do a lot of things that it won't do unless you ask it to do them. " created="Thu, 13 Jan 2022 15:49:38 GMT"/>
					<outline text="When Drummer opens, if this is your first time using it, a file named Notes will open automatically. " created="Thu, 13 Jan 2022 16:07:21 GMT"/>
					<outline text="You can use this outline to get the values that are needed in config.json. If you've used Drummer before you can use any file for this purpose." created="Thu, 13 Jan 2022 16:16:17 GMT"/>
					<outline text="In the top headline enter: &lt;i&gt;localStorage&lt;/i&gt; and press Cmd-/ (on Mac, Control-/ on Windows and Linux)." created="Thu, 13 Jan 2022 16:16:36 GMT"/>
					<outline text="Double-click on the headline that appears to reveal a bunch of values. The ones you want are:" created="Thu, 13 Jan 2022 16:16:47 GMT">
						<outline text="1. twOauthToken" created="Thu, 13 Jan 2022 15:50:31 GMT"/>
						<outline text="2. twOauthTokenSecret" created="Thu, 13 Jan 2022 15:50:33 GMT"/>
						</outline>
					<outline text="Copy these values into oauth_token and oauth_token_secret in your config.json file, as described above. " created="Thu, 13 Jan 2022 16:18:02 GMT"/>
					</outline>
				<outline text="### How to use" created="Thu, 13 Jan 2022 16:18:30 GMT">
					<outline text="First a caveat -- I am a LogSeq newbie, so my instructions will be rudimentary and possibly incomplete. But this worked for me, and hopefully will work for you. :smile:" created="Thu, 13 Jan 2022 16:18:36 GMT"/>
					<outline text="First, the &lt;i&gt;journals&lt;/i&gt; folder you specify in config.json will be public. Be sure not to add any private information to those files -- they will become public when you publish your blog. I understand it's possible to have more than one journals folder, if so you might want to set up a new one just for your blog. " created="Thu, 13 Jan 2022 16:19:25 GMT"/>
					<outline text="Write whatever you want into your journal and when you're ready to publish, go to the myLogseqBlog folder and run the app by typing this into your Terminal app." created="Thu, 13 Jan 2022 16:20:35 GMT">
						<outline text="node mylogseqblog.js" created="Thu, 13 Jan 2022 16:21:30 GMT"/>
						</outline>
					<outline text="You should see a bunch of messages scroll by, hopefully no errors. It should take no more than a couple of seconds. When it's done, try opening your blog in a browser." created="Thu, 13 Jan 2022 16:21:40 GMT">
						<outline text="http://oldschool.scripting.com/yourtwitterscreenname/" created="Thu, 13 Jan 2022 16:22:22 GMT"/>
						</outline>
					<outline text="Add something new to the journal, run the app again. " created="Thu, 13 Jan 2022 16:22:42 GMT"/>
					</outline>
				<outline text="### One more step, make blog.opml public" isComment="true" created="Thu, 13 Jan 2022 18:29:33 GMT">
					<outline text="You will see an error the first time you run mylogseqblog.js because the file it generates, blog.opml, is private. You have to make it public, manually, using Drummer. When I have more time to fix this bug, this step will be incorporated into the app." created="Thu, 13 Jan 2022 18:29:39 GMT">
						<outline text="1. In Drummer, choose the Open command in the File menu." created="Thu, 13 Jan 2022 18:31:32 GMT"/>
						<outline text="2. You should see one file, blog.opml, choose it. " created="Thu, 13 Jan 2022 18:31:46 GMT"/>
						<outline text="3. Choose Make outline public in the File menu, confirm that you want to make the file public. " created="Thu, 13 Jan 2022 18:32:00 GMT"/>
						<outline text="4. A dialog will appear with the public URL of the file. You can dismiss the dialog. " created="Thu, 13 Jan 2022 18:32:57 GMT"/>
						<outline text="5. You can then close the file, and close Drummer. " created="Thu, 13 Jan 2022 18:32:42 GMT"/>
						<outline text="6. In the Terminal app, run mylogseqblog.js again. " created="Thu, 13 Jan 2022 18:33:19 GMT"/>
						</outline>
					</outline>
				<outline text="### Updates" created="Fri, 14 Jan 2022 00:43:38 GMT">
					<outline text="#### v0.4.1, 1/13/22 by DW" created="Fri, 14 Jan 2022 00:43:42 GMT">
						<outline text="When &lt;i&gt;myLogseqBlog&lt;/i&gt; uploads the file, it takes care of making it public, so the manual step specified in the docs is no longer needed. "/>
						<outline text="The nodes we create are of type &lt;i&gt;markdown&lt;/i&gt;, so that the blog processor knows to render the text through a Markdown processor. "/>
						</outline>
					</outline>
				<outline text="### Questions, comments?" created="Thu, 13 Jan 2022 16:23:16 GMT">
					<outline text="Post an issue &lt;a href=&quot;https://github.com/scripting/myLogseqBlog/issues/new&quot;&gt;here&lt;/a&gt;. " created="Thu, 13 Jan 2022 16:23:21 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Thu, 13 Jan 2022 15:28:02 GMT">
			<outline text="nodeEditorSuite.utilities.buildIMyLogseqBlog ()"/>
			</outline>
		</body>
	</opml>
